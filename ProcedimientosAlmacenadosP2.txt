
--procedimiento para insertar datos en tabla tipo Usuarios
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE spInsertarTipoUsuarios
	@tipoUsuarios VARCHAR (25),
	@registrado bit output,
	@mensaje varchar(80) output
	)
AS
BEGIN
if(not exists(select * from TipoUsuarios where nombre=@nombre))
	begin
	INSERT INTO TipoUsuarios(nombre)
		VALUES (@nombre);
		SET @registrado=1
		SET @mensaje= 'Tipo de Usuario Ingresado con Exito'
END
ELSE
BEGIN 
		set @Registrado=0
		set @mensaje='Ya existe un Tipo de Usuario con este nombre'
END
END

--procedimiento para insertar datos en tabla Usuarios
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE spInsertarUsuarios
	@nombre VARCHAR (20),
	@apellidoP VARCHAR (20),
	@apellidoM VARCHAR (20),
	@correoE VARCHAR (320),
	@contrasena VARCHAR (100),
	@idTipoUsuario int,
	@registrado bit output,
	@mensaje varchar(80) output
	)
AS
BEGIN
if(not exists(select * from Usuarios where correoE=@correoE ))
	begin
	INSERT INTO Usuarios(nombre, apellidoP,apellidoM,correoE,contrasena,idTipoUsuario)
		VALUES (@nombre,@apellidoP,@apellidoM,@correoE,@contrasena,@idTipoUsuario);
		SET @registrado=1
		SET @mensaje= 'Usuario Ingresado con Exito'
END
ELSE
BEGIN 
		set @Registrado=0
		set @mensaje='Ya existe un Usuario registrado con este correo'
END
END

--procedimiento para insertar datos en tabla Ligas
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE spInsertarLigas
	@nombre VARCHAR (20),
	@descripcion VARCHAR (200),
	@correoE VARCHAR (320),
	@telefono VARCHAR (10),
	@registrado bit output,
	@mensaje varchar(80) output
	)
AS
BEGIN
if(not exists(select * from Ligas where nombre=@nombre ))
	begin
	INSERT INTO Ligas(nombre, descripcion,correoE,telefono)
		VALUES (@nombre,@descripcion,@correoE,@telefono);
		SET @registrado=1
		SET @mensaje= 'Liga Ingresada con Exito'
END
ELSE
BEGIN 
		set @Registrado=0
		set @mensaje='Ya existe una Liga registrada con este correo'
END
END